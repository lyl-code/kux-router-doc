import{_ as a,c as i,o as t,a5 as s}from"./chunks/framework.fnDmWd_6.js";const u=JSON.parse('{"title":"UTS 类型：NavigationHookAfter","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/NavigationHookAfter.md","filePath":"api/interfaces/NavigationHookAfter.md"}'),e={name:"api/interfaces/NavigationHookAfter.md"},o=s(`<h1 id="uts-类型-navigationhookafter" tabindex="-1">UTS 类型：NavigationHookAfter <a class="header-anchor" href="#uts-类型-navigationhookafter" aria-label="Permalink to &quot;UTS 类型：NavigationHookAfter&quot;">​</a></h1><p>全局后置守卫。详情可查阅<a href="/guide/advanced/navigation-guards.html#全局后置钩子">全局后置钩子</a>。</p><h2 id="可调用函数" tabindex="-1">可调用函数 <a class="header-anchor" href="#可调用函数" aria-label="Permalink to &quot;可调用函数&quot;">​</a></h2><ul><li>NavigationHookAfter(<code>to</code>, <code>from</code>, <code>failure</code>): <code>any</code></li></ul><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><table><thead><tr><th>名称</th><th>类型</th></tr></thead><tbody><tr><td>to</td><td><a href="./RouteLocationNormalizedLoaded.html"><code>RouteLocationNormalizedLoaded</code></a></td></tr><tr><td>from</td><td><a href="./RouteLocationNormalizedLoaded.html"><code>RouteLocationNormalizedLoaded</code></a></td></tr><tr><td>failure</td><td><a href="./NavigationFailure.html"><code>NavigationFailure</code></a> | <code>null</code></td></tr></tbody></table><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p><code>any</code></p><h2 id="uts" tabindex="-1">UTS <a class="header-anchor" href="#uts" aria-label="Permalink to &quot;UTS&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * \`afterEach\` 守卫回调定义</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NavigationHookAfter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RouteLocationNormalizedLoaded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">from</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RouteLocationNormalizedLoaded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">failure</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NavigationFailure</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span></span></code></pre></div>`,10),n=[o];function h(l,d,r,k,p,c){return t(),i("div",null,n)}const f=a(e,[["render",h]]);export{u as __pageData,f as default};
