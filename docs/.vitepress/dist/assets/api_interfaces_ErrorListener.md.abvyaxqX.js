import{_ as a,c as s,o as e,a5 as i}from"./chunks/framework.fnDmWd_6.js";const _=JSON.parse('{"title":"UTS 类型：ErrorListener","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/ErrorListener.md","filePath":"api/interfaces/ErrorListener.md"}'),t={name:"api/interfaces/ErrorListener.md"},r=i(`<h1 id="uts-类型-errorlistener" tabindex="-1">UTS 类型：ErrorListener <a class="header-anchor" href="#uts-类型-errorlistener" aria-label="Permalink to &quot;UTS 类型：ErrorListener&quot;">​</a></h1><p>错误处理器。详情可查阅<a href="./IRouter.html#onerror">onError</a>。</p><h2 id="可调用函数" tabindex="-1">可调用函数 <a class="header-anchor" href="#可调用函数" aria-label="Permalink to &quot;可调用函数&quot;">​</a></h2><ul><li>ErrorListener(<code>error</code>): <code>void</code></li></ul><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><table><thead><tr><th>名称</th><th>类型</th></tr></thead><tbody><tr><td>error</td><td><code>any</code></td></tr></tbody></table><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p><code>void</code></p><h2 id="uts" tabindex="-1">UTS <a class="header-anchor" href="#uts" aria-label="Permalink to &quot;UTS&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * \`onError\` 回调定义</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ErrorListener</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span></code></pre></div>`,10),n=[r];function h(o,l,d,p,c,k){return e(),s("div",null,n)}const g=a(t,[["render",h]]);export{_ as __pageData,g as default};
