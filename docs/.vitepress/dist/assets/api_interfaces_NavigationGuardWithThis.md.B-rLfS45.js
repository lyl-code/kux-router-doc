import{_ as a,c as i,o as t,a5 as s}from"./chunks/framework.fnDmWd_6.js";const g=JSON.parse('{"title":"UTS 类型：NavigationGuardWithThis","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/NavigationGuardWithThis.md","filePath":"api/interfaces/NavigationGuardWithThis.md"}'),e={name:"api/interfaces/NavigationGuardWithThis.md"},o=s('<h1 id="uts-类型-navigationguardwiththis" tabindex="-1">UTS 类型：NavigationGuardWithThis <a class="header-anchor" href="#uts-类型-navigationguardwiththis" aria-label="Permalink to &quot;UTS 类型：NavigationGuardWithThis&quot;">​</a></h1><p>导航守卫。详情可查阅<a href="/guide/advanced/navigation-guards.html">导航守卫</a>。</p><h2 id="可调用函数" tabindex="-1">可调用函数 <a class="header-anchor" href="#可调用函数" aria-label="Permalink to &quot;可调用函数&quot;">​</a></h2><h3 id="navigationguardwiththis" tabindex="-1">NavigationGuardWithThis <a class="header-anchor" href="#navigationguardwiththis" aria-label="Permalink to &quot;NavigationGuardWithThis&quot;">​</a></h3><ul><li>NavigationGuardWithThis(<code>to</code>, <code>from</code>): <code>Promise</code>&lt;<code>any</code> | <code>null</code>&gt;</li></ul><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table><thead><tr><th>名称</th><th>类型</th></tr></thead><tbody><tr><td>to</td><td><a href="./RouteLocationNormalizedLoaded.html">RouteLocationNormalizedLoaded</a> | <code>null</code></td></tr><tr><td>from</td><td><a href="./RouteLocationNormalizedLoaded.html">RouteLocationNormalizedLoaded</a> | <code>null</code></td></tr></tbody></table><h4 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h4><p><code>Promise</code>&lt;<code>any</code> | <code>null</code>&gt;</p><div class="warning custom-block"><p class="custom-block-title">返回值说明</p><p>由于目前 <code>UTS</code> 联合类型限制，类型定义只能定义 <code>any | null</code>，实际返回值支持如下三种情况：</p><ul><li><code>false</code>: 直接返回 <code>false</code> 可以用来取消导航。</li><li><code>string</code>: 可以直接返回 <code>页面地址</code> 或者 <code>路由名称</code>。</li><li><a href="./RouteRecordNormalized.html"><code>RouteLocationNormalizedLoaded</code></a>：可以直接返回对象形式的路由信息。</li></ul></div><h2 id="uts" tabindex="-1">UTS <a class="header-anchor" href="#uts" aria-label="Permalink to &quot;UTS&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NavigationGuardWithThis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RouteLocationNormalizedLoaded</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">from</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RouteLocationNormalizedLoaded</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>',12),h=[o];function d(l,n,r,c,k,p){return t(),i("div",null,h)}const m=a(e,[["render",d]]);export{g as __pageData,m as default};
