import{_ as s,c as a,o as i,a5 as n}from"./chunks/framework.fnDmWd_6.js";const u=JSON.parse('{"title":"UTS 类型：RouteRecordNormalized","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/RouteRecordNormalized.md","filePath":"api/interfaces/RouteRecordNormalized.md"}'),e={name:"api/interfaces/RouteRecordNormalized.md"},l=n(`<h1 id="uts-类型-routerecordnormalized" tabindex="-1">UTS 类型：RouteRecordNormalized <a class="header-anchor" href="#uts-类型-routerecordnormalized" aria-label="Permalink to &quot;UTS 类型：RouteRecordNormalized&quot;">​</a></h1><p>创建路由时路由表中的路由信息。</p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><h3 id="beforeenter" tabindex="-1">beforeEnter <a class="header-anchor" href="#beforeenter" aria-label="Permalink to &quot;beforeEnter&quot;">​</a></h3><ul><li><code>可选</code> beforeEnter: <a href="./NavigationGuardWithThis.html"><code>NavigationGuardWithThis</code></a></li></ul><p>被注册的 <code>beforeEnter</code> 前置守卫。详情可查阅<a href="/guide/advanced/navigation-guards.html#全局前置守卫">前置守卫</a>。</p><h3 id="meta" tabindex="-1">meta <a class="header-anchor" href="#meta" aria-label="Permalink to &quot;meta&quot;">​</a></h3><ul><li><code>可选</code> meta: <code>UTSJSONObject</code></li></ul><p>路由元信息。详情可查阅<a href="/guide/advanced/meta.html">路由元信息</a>。</p><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><ul><li><code>可选</code> name: <a href="./RouteRecordName.html"><code>RouteRecordName</code></a></li></ul><p>路由名称。</p><h3 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h3><ul><li><code>可选</code> path: <code>PagesJson.PagePath</code></li></ul><p>当前路由页面地址，这个是去除参数后的地址，如：<code>/pages/user/info</code>。</p><h3 id="query" tabindex="-1">query <a class="header-anchor" href="#query" aria-label="Permalink to &quot;query&quot;">​</a></h3><ul><li><code>可选</code> query: <code>UTSJSONObject</code></li></ul><p>当前路由的 <code>query</code> 传参。</p><h3 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data&quot;">​</a></h3><ul><li><code>可选</code> data: <code>UTSJSONObject</code></li></ul><p>路由隐式传参，替代旧版本的 <code>params</code>。</p><h3 id="redirect" tabindex="-1">redirect <a class="header-anchor" href="#redirect" aria-label="Permalink to &quot;redirect&quot;">​</a></h3><ul><li><code>可选</code> redirect: <a href="./RouteRecordRedirectOption.html"><code>RouteRecordRedirectOption</code></a></li></ul><p>被注册的路由重定向守卫。详情可查阅<a href="/guide/essentials/redirect.html">重定向</a>。</p><h3 id="startupintercept" tabindex="-1">startupIntercept <a class="header-anchor" href="#startupintercept" aria-label="Permalink to &quot;startupIntercept&quot;">​</a></h3><ul><li><code>可选</code> startupIntercept: <code>boolean</code></li></ul><p>是否开启启动拦截，开启后 <code>beforeEnter</code> 和 <code>redirect</code> 会在实例加载成功后就立刻挂载全局，适用于应用启动拦截的场景，如首页未登录直接跳转登录页等。</p><h3 id="animationtype" tabindex="-1">animationType <a class="header-anchor" href="#animationtype" aria-label="Permalink to &quot;animationType&quot;">​</a></h3><ul><li><code>可选</code> animationType: <code>string</code></li></ul><p>窗口显示的动画类型。详情可查阅<a href="/guide/advanced/transitions.html">过渡动效</a>。</p><h3 id="animationduration" tabindex="-1">animationDuration <a class="header-anchor" href="#animationduration" aria-label="Permalink to &quot;animationDuration&quot;">​</a></h3><ul><li><code>可选</code> animationDuration: <code>number</code></li></ul><p>窗口显示动画的持续时间，单位为毫秒。详情可查阅<a href="/guide/advanced/transitions.html">过渡动效</a>。</p><h2 id="uts" tabindex="-1">UTS <a class="header-anchor" href="#uts" aria-label="Permalink to &quot;UTS&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 创建路由时路由表中的路由信息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RouteRecordNormalized</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 被注册的 \`beforeEnter\` 前置守卫</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    beforeEnter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NavigationGuardWithThis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // children: any[]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 路由元信息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UTSJSONObject</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 路由名称</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RouteRecordName</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 当前路由页面地址，这个是去除参数后的地址，如：\`/pages/user/info\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PagesJson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PagePath</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 当前路由的 \`query\` 传参</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UTSJSONObject</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 路由隐式传参，替代旧版本的 \`params\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UTSJSONObject</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 被注册的路由重定向守卫</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    redirect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RouteRecordRedirectOption</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 是否开启启动拦截，开启后 \`beforeEnter\` 和 \`redirect\` 会在实例加载成功后就立刻挂载全局，适用于应用启动拦截的场景，如首页未登录直接跳转登录页等。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    startupIntercept</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 窗口显示的动画类型，\`v1.1.0\` 及以上版本支持</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + auto: 自动选择动画效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + none: 无动画效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + slide-in-right: 从右侧横向滑动效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + slide-in-left: 左侧横向滑动效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + slide-in-top: 从上侧竖向滑动效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + slide-in-bottom: 从下侧竖向滑动效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + fade-in: 从透明到不透明逐渐显示效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + zoom-out: 从小到大逐渐放大显示效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + zoom-fade-out: 从小到大逐渐放大并且从透明到不透明逐渐显示效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + pop-in: 从右侧平移入栈动画效果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    animationType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 窗口显示动画的持续时间，单位为 ms</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * + \`v1.1.0\` 及以上版本支持</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    animationDuration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,35),t=[l];function p(h,r,k,d,o,c){return i(),a("div",null,t)}const g=s(e,[["render",p]]);export{u as __pageData,g as default};
